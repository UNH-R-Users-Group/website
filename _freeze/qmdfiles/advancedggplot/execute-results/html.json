{
  "hash": "12db4f32659ea32e954899aee619d5c4",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"ggplot Tutorial\"\nformat: html\neditor: visual\nexecute: \n  warning: false\neditor_options: \n  chunk_output_type: console\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(RColorBrewer)\nlibrary(extrafont)\nlibrary(cowplot)\nlibrary(gridExtra)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nchic <- readr::read_csv(\"https://cedricscherer.com/data/chicago-nmmaps-custom.csv\") \n#:: is namespace that can be used to access a function without librarying the package\n```\n:::\n\n\n\n## **Building Blocks for ggplot**\n\n-   Data: The raw data that you want to plot.\n\n-   Geometries geom\\_: The geometric shapes that will represent the data.\n\n-   Aesthetics aes(): Aesthetics of the geometric and statistical objects, such as position, color, size, shape, and transparency\n\n-   Scales scale\\_: Maps between the data and the aesthetic dimensions, such as data range to plot width or factor values to colors.\n\n-   Statistical transformations stat\\_: Statistical summaries of the data, such as quantiles, fitted curves, and sums.\n\n-   Coordinate system coord\\_: The transformation used for mapping data coordinates into the plane of the data rectangle.\n\n-   Facets facet\\_: The arrangement of the data into a grid of plots. Visual themes theme(): The overall visual defaults of a plot, such as background, grids, axes, default typeface, sizes and colors.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#creating only the panel\n(g <- ggplot(data = chic,\n            aes(x = date, y = temp)))\n```\n\n::: {.cell-output-display}\n![](advancedggplot_files/figure-html/creating blank plot-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#putting object in parentheses so it runs immediately\n```\n:::\n\n\n\nWhy does only a panel show up?\n\nList of geoms [here](https://ggplot2.tidyverse.org/reference/)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n(g <- ggplot(data = chic,\n            aes(x = date, y = temp))+\n    geom_point()+ #adds point layer to plot\n    geom_line())#adds line layer\n```\n\n::: {.cell-output-display}\n![](advancedggplot_files/figure-html/adding geom_ layer-1.png){width=672}\n:::\n:::\n\n\n\n## Changing Properties of Geometries\n\nList of color presets [here](chrome-extension://efaidnbmnnnibpcajpcglclefindmkaj/http://www.stat.columbia.edu/~tzheng/files/Rcolor.pdf)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n(g <- ggplot(data = chic,\n            aes(x = date, y = temp))+\n    geom_point(color = \"firebrick\", shape = \"diamond\", size = 2)) #adds point layer to plot\n```\n\n::: {.cell-output-display}\n![](advancedggplot_files/figure-html/changing properties of geometries-1.png){width=672}\n:::\n:::\n\n\n\n### Themes\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntheme_set(theme_bw())\n\ng + geom_point(color = \"firebrick\")\n```\n\n::: {.cell-output-display}\n![](advancedggplot_files/figure-html/themes-1.png){width=672}\n:::\n:::\n\n\n\ntheme() is essential for modifying elements of themes\n\n### Creating your own theme\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfaiths_theme <- function() {\n  theme(\n    # 1) Add border with a purple dashed line\n    panel.border = element_rect(colour = \"purple\", fill = NA, linetype = 2),\n    \n    # 2) Set background color to aliceblue\n    panel.background = element_rect(fill = \"aliceblue\"),\n    \n    # 3) Modify grid lines: major grid lines in thistle color, dashed\n    panel.grid.major.x = element_line(colour = \"thistle\", linetype = 3, size = 0.5),\n    panel.grid.major.y = element_line(colour = \"thistle\", linetype = 3, size = 0.5),\n    \n    # Remove minor grid lines\n    panel.grid.minor.x = element_blank(),\n    panel.grid.minor.y = element_blank(),\n    \n    # 4) Customize axis text: italic and thistle-colored\n    axis.text = element_text(colour = \"thistle\", face = \"italic\",  family = \"Times New Roman\"),\n    \n    # 5) Customize axis titles: thistle color\n    axis.title = element_text(colour = \"thistle\", family = \"Times New Roman\"),\n    \n    # Customize axis ticks: thistle color\n    axis.ticks = element_line(colour = \"thistle\"),\n    \n    # 6) Place legend on the right side\n    legend.position = \"right\"\n  )\n}\n\ng + geom_point(alpha = 0.2)\n```\n\n::: {.cell-output-display}\n![](advancedggplot_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n\n\n### Adjusting Axes\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n(g <- ggplot(data = chic,\n            aes(x = date, y = temp))+\n    geom_point(color = \"firebrick\", shape = \"diamond\", size = 2)+\n    labs(x = \"Year\", y = \"Temperature (°F)\")+\n     theme(axis.title.x = element_text(vjust = 0, size = 15),#using vjust for adjusting vertical allignment (normally 0-1) to move axis horizontally\n        axis.title.y = element_text(vjust = 2, size = 15)))\n```\n\n::: {.cell-output-display}\n![](advancedggplot_files/figure-html/axes-1.png){width=672}\n:::\n:::\n\n\n\n### Adjusting Margins\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#margin(t, r, b, l)\n#A good way to remember the order of the margin sides is “t-r-ou-b-l-e”.\nggplot(chic, aes(x = date, y = temp)) +\n  geom_point(color = \"firebrick\") +\n  labs(x = \"Year\", y = \"Temperature (°F)\") +\n  theme(axis.title.x = element_text(margin = margin(t = 10), size = 15),\n        axis.title.y = element_text(margin = margin(r = 10), size = 15))\n```\n\n::: {.cell-output-display}\n![](advancedggplot_files/figure-html/adjusting margins-1.png){width=672}\n:::\n:::\n\n\n\n### Changing Axis Titles\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(chic, aes(x = date, y = temp)) +\n  geom_point(color = \"firebrick\") +\n  labs(x = \"Year\", y = \"Temperature (°F)\") +\n  theme(axis.title = element_text(color = \"deepskyblue\",size = 15, face = \"bold\"),\n        axis.text = element_text(color = \"forestgreen\", size = 12),\n        axis.text.x = element_text(angle = 50, vjust = 1, hjust = 1, size = 12, face = \"italic\"))#specifying angle \n```\n\n::: {.cell-output-display}\n![](advancedggplot_files/figure-html/changing axis titles-1.png){width=672}\n:::\n:::\n\n\n\n### Removing Axis Tick Lines\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(chic, aes(x = date, y = temp)) +\n  geom_point(color = \"firebrick\") +\n  labs(x = \"Year\", y = \"Temperature (°F)\") +\n  theme(axis.ticks.y = element_blank(),\n        axis.ticks.x = element_blank())#element_blank removes the element\n```\n\n::: {.cell-output-display}\n![](advancedggplot_files/figure-html/remove axis & tick lines-1.png){width=672}\n:::\n:::\n\n\n\n### Limiting Axis Range\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(chic, aes(x = date, y = temp)) +\n  geom_point(color = \"firebrick\") +\n  labs(x = \"Year\", y = \"Temperature (°F)\") +\n  ylim(c(0, 50))\n```\n\n::: {.cell-output-display}\n![](advancedggplot_files/figure-html/limiting axis range-1.png){width=672}\n:::\n:::\n\n\n\nAlternatively you can use scale_y_continuous(limits = c(0,50)) or coord_cartesian(ylim = c(0, 50)). However, scale_y/ylim subsets the data first and coord zooms in. Coord may give incorrect outcome if you want to see the subset of the data at specified y coordinates\n\n\n\n::: {.cell}\n\n```{.forcing .cell-code}\nchic_high <- dplyr::filter(chic, temp > 25, o3 > 20)\n\nggplot(chic_high, aes(x = temp, y = o3)) +\n  geom_point(color = \"darkcyan\") +\n  labs(x = \"Temperature higher than 25°F\",\n       y = \"Ozone higher than 20 ppb\") +\n  expand_limits(x = 0, y = 0)\n  #using coord_cartesian(xlim = c(0, NA), ylim = c(0, NA)) will lead to same results\n  \n  \nggplot(chic_high, aes(x = temp, y = o3)) +\n  geom_point(color = \"darkcyan\") +\n  labs(x = \"Temperature higher than 25°F\",\n       y = \"Ozone higher than 20 ppb\") +\n  expand_limits(x = 0, y = 0) +\n  coord_cartesian(expand = FALSE, clip = \"off\") #using clip = \"off\" to draw outside of plot area\n```\n:::\n\n\n\n### Making Axis Longer\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(chic, aes(x = temp, y = temp + rnorm(nrow(chic), sd = 20))) +\n  geom_point(color = \"sienna\") +\n  labs(x = \"Temperature (°F)\", y = \"Temperature (°F) + random noise\") +\n  xlim(c(0, 100)) + ylim(c(0, 150)) +\n  coord_fixed(ratio = 1/5)#ratios higher than 1 make y longer, and vice versa\n```\n\n::: {.cell-output-display}\n![](advancedggplot_files/figure-html/making axis longer-1.png){width=672}\n:::\n:::\n\n\n\n### Using functions to alter labels\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(chic, aes(x = date, y = temp)) +\n  geom_point(color = \"firebrick\") +\n  labs(x = \"Year\", y = NULL) +\n  scale_y_continuous(label = function(x) {return(paste(x, \"°F\"))}) #use funtion to alter all parts of y label\n```\n\n::: {.cell-output-display}\n![](advancedggplot_files/figure-html/Functions to alter labels-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n(g <- ggplot(chic, aes(x = date, y = temp)) +\n  geom_point(color = \"firebrick\") +\n  scale_y_continuous(label = function(x) {return(paste(x, \"Degrees Fahrenheit\"))}) +\n  labs(x = \"Year\", y = NULL,\n       caption = \"Data: NMMAPS\",\n       tag = \"Fig. 1\") +#labeling this figure \n  theme(plot.title = element_text(size = 14, face = \"bold.italic\"),\n        plot.caption = element_text(hjust = 0)))\n```\n\n::: {.cell-output-display}\n![](advancedggplot_files/figure-html/captions-1.png){width=672}\n:::\n:::\n\n\n\nThe function takes the y-values (in this case `x`), and returns the value concatenated with \"°F\" (so if `x = 32`, the label becomes `32°F`).\n\n## Legends\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(chic,\n       aes(x = date, y = temp, color = season)) +\n  geom_point() +\n  labs(x = \"Year\", y = \"Temperature (°F)\")\n```\n\n::: {.cell-output-display}\n![](advancedggplot_files/figure-html/Legends-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#turning off legend\nggplot(chic,\n       aes(x = date, y = temp, color = season)) +\n  geom_point() +\n  labs(x = \"Year\", y = \"Temperature (°F)\") +\n  theme(legend.position = \"none\")#turns off legend\n```\n\n::: {.cell-output-display}\n![](advancedggplot_files/figure-html/Legends-2.png){width=672}\n:::\n\n```{.r .cell-code}\n#can also use guides(color = \"none\") or scale_color_discrete(guide = \"none\")\n\n#removing legend title\nggplot(chic, aes(x = date, y = temp, color = season)) +\n  geom_point() +\n  labs(x = \"Year\", y = \"Temperature (°F)\") +\n  theme(legend.title = element_blank())\n```\n\n::: {.cell-output-display}\n![](advancedggplot_files/figure-html/Legends-3.png){width=672}\n:::\n\n```{.r .cell-code}\n#changing legend position\nggplot(chic, aes(x = date, y = temp, color = season)) +\n  geom_point() +\n  labs(x = \"Year\", y = \"Temperature (°F)\") +\n  theme(legend.position = \"top\")\n```\n\n::: {.cell-output-display}\n![](advancedggplot_files/figure-html/Legends-4.png){width=672}\n:::\n\n```{.r .cell-code}\n#placing legend inside of the panel\n\nggplot(chic, aes(x = date, y = temp, color = season)) +\n  geom_point() +\n  labs(x = \"Year\", y = \"Temperature (°F)\",\n       color = NULL) +\n  theme(legend.position = c(.15, .15),\n        legend.background = element_rect(fill = \"transparent\"))\n```\n\n::: {.cell-output-display}\n![](advancedggplot_files/figure-html/Legends-5.png){width=672}\n:::\n\n```{.r .cell-code}\n#change legend direction\nggplot(chic, aes(x = date, y = temp, color = season)) +\n  geom_point() +\n  labs(x = \"Year\", y = \"Temperature (°F)\") +\n  theme(legend.position = c(.5, .97),\n        legend.background = element_rect(fill = \"transparent\")) +\n  guides(color = guide_legend(direction = \"horizontal\"))\n```\n\n::: {.cell-output-display}\n![](advancedggplot_files/figure-html/Legends-6.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(chic, aes(x = date, y = temp, color = season)) +\n  geom_point() +\n  labs(x = \"Year\", y = \"Temperature (°F)\",\n       color = \"Seasons\\nindicated\\nby colors:\") +\n  theme(legend.title = element_text(\n                                    color = \"chocolate\",\n                                    size = 14, face = \"bold\"))\n```\n\n::: {.cell-output-display}\n![](advancedggplot_files/figure-html/Legends-7.png){width=672}\n:::\n\n```{.r .cell-code}\n#changing order of legend keys\nchic$season <-\n  factor(chic$season,\n         levels = c(\"Winter\", \"Spring\", \"Summer\", \"Autumn\"))\n\nggplot(chic, aes(x = date, y = temp, color = season)) +\n  geom_point() +\n  labs(x = \"Year\", y = \"Temperature (°F)\")\n```\n\n::: {.cell-output-display}\n![](advancedggplot_files/figure-html/Legends-8.png){width=672}\n:::\n\n```{.r .cell-code}\n#changing legend labels\nggplot(chic, aes(x = date, y = temp, color = season)) +\n  geom_point() +\n  labs(x = \"Year\", y = \"Temperature (°F)\") +\n  scale_color_discrete(\n    name = \"Seasons:\",\n    labels = c(\"Mar—May\", \"Jun—Aug\", \"Sep—Nov\", \"Dec—Feb\")\n  ) +\n  theme(legend.title = element_text(\n    color = \"chocolate\", size = 14, face = 2\n  ))\n```\n\n::: {.cell-output-display}\n![](advancedggplot_files/figure-html/Legends-9.png){width=672}\n:::\n\n```{.r .cell-code}\n#changing size of legend symbols\nggplot(chic, aes(x = date, y = temp, color = season)) +\n  geom_point() +\n  labs(x = \"Year\", y = \"Temperature (°F)\") +\n  theme(legend.key = element_rect(fill = NA),\n        legend.title = element_text(color = \"chocolate\",\n                                    size = 14, face = 2)) +\n  scale_color_discrete(\"Seasons:\") +\n  guides(color = guide_legend(override.aes = list(size = 6)))\n```\n\n::: {.cell-output-display}\n![](advancedggplot_files/figure-html/Legends-10.png){width=672}\n:::\n\n```{.r .cell-code}\n#manually adding legend items\n\n#defualt plot\nggplot(chic, aes(x = date, y = o3)) +\n  geom_line(color = \"gray\") +\n  geom_point(color = \"darkorange2\") +\n  labs(x = \"Year\", y = \"Ozone\")\n```\n\n::: {.cell-output-display}\n![](advancedggplot_files/figure-html/Legends-11.png){width=672}\n:::\n\n```{.r .cell-code}\n#forcing a legend by mapping a guide to a variable. Using aes to map not to a variable in the data set, but to a single string (so that we can get just one color for each)\nggplot(chic, aes(x = date, y = o3)) +\n  geom_line(aes(color = \"line\")) +\n  geom_point(aes(color = \"points\")) +\n  labs(x = \"Year\", y = \"Ozone\") +\n  scale_color_manual(name = NULL,\n                     guide = \"legend\",\n                     values = c(\"points\" = \"darkorange2\",\n                                \"line\" = \"gray\")) +\n  guides(color = guide_legend(override.aes = list(linetype = c(1, 0),\n                                                  shape = c(NA, 16))))\n```\n\n::: {.cell-output-display}\n![](advancedggplot_files/figure-html/Legends-12.png){width=672}\n:::\n\n```{.r .cell-code}\n#other legend styles\nggplot(chic,\n       aes(x = date, y = temp, color = temp)) +\n  geom_point() +\n  labs(x = \"Year\", y = \"Temperature (°F)\", color = \"Temperature (°F)\")\n```\n\n::: {.cell-output-display}\n![](advancedggplot_files/figure-html/Legends-13.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(chic, aes(x = date, y = temp)) +\n  geom_point(color = \"#1D8565\", size = 2) +\n  labs(x = \"Year\", y = \"Temperature (°F)\") +\n  theme(panel.background = element_rect(\n    fill = \"#64D2AA\", color = \"#64D2AA\", linewidth = 2)\n  )\n```\n\n::: {.cell-output-display}\n![](advancedggplot_files/figure-html/Working with Backgrounds & Gridlines-1.png){width=672}\n:::\n:::\n\n\n\n## Working with Ribbons\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nchic$o3run <- as.numeric(stats::filter(chic$o3, rep(1/30, 30), sides = 2))\n\nggplot(chic, aes(x = date, y = o3run)) +\n   geom_line(color = \"chocolate\", lwd = .8) +\n   labs(x = \"Year\", y = \"Ozone\")\n```\n\n::: {.cell-output-display}\n![](advancedggplot_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n\n### Filling the area below the curve\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(chic, aes(x = date, y = o3run)) +\n   geom_ribbon(aes(ymin = 0, ymax = o3run),\n               fill = \"orange\", alpha = .4) +\n   geom_line(color = \"chocolate\", lwd = .8) +\n   labs(x = \"Year\", y = \"Ozone\")\n```\n\n::: {.cell-output-display}\n![](advancedggplot_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n\n## Specifying Formula for Smoothing\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(chic, aes(x = o3, y = temp)) +\n  geom_point(color = \"gray40\", alpha = .3) +\n  geom_smooth(\n    method = \"lm\",\n    formula = y ~ x + I(x^2) + I(x^3) + I(x^4) + I(x^5),#adding a polynomial regression\n    color = \"black\",\n    fill = \"firebrick\"\n  ) +\n  labs(x = \"Ozone Level\", y = \"Temperature (°F)\")\n```\n\n::: {.cell-output-display}\n![](advancedggplot_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n\n## Making Publication Ready Plots\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(palmerpenguins)\ndata(penguins)\n```\n:::\n\n\n\n## Plotting with Penguins dataset\n\nThings to keep in mind:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Max figure width: 6.875 in \n#Max figure height: 9.0625 in \n(p <- ggplot(data = penguins, \n             mapping = aes(\n               x = bill_length_mm,\n               y = bill_depth_mm))+\n    geom_point( alpha = 0.2)+\n    geom_smooth(method = \"lm\")+\n    facet_wrap(facet = \"species\",\n               nrow = 3,#faceting vertically\n               scales = \"fixed\"))\n```\n\n::: {.cell-output-display}\n![](advancedggplot_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "advancedggplot_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}